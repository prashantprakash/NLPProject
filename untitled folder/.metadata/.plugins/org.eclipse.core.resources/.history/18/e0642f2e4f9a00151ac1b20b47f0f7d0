import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

/**
 * @author Prashant
 * @created_date 2nd Dec 2015
 * @description This is a scorer class to calculate the score and build the table to show the differences
 *
 */
public class Scorer {
	
	public static void main(String[] args) {
		int agreeCount = 0;
        int disagreeCount = 0;
        
        HashMap<String, HashMap<String, ArrayList<String>>> tagChosenForTag = new HashMap<String, HashMap<String, ArrayList<String>>>();
        
        File testFile = new File("/Users/Prashant/NLPProject/brown-test-sentences.txt");
        File outputFile = new File("/Users/Prashant/NLPProject/brown-test-sentences_Viterbi_tag.txt");
        FileWriter outFile;
        
        try {
            outFile = new FileWriter(new File("scoring/score.html"));
            
            Scanner testScanner = new Scanner(testFile);
            Scanner outputScanner = new Scanner(outputFile);
            
            
            String testPOS;
            String outputPOS;
            int i = 0;
            
            while (testScanner.hasNext() && outputScanner.hasNext()) {
                i++;
                // Get the parts of speech
                testPOS = testScanner.next();
                outputPOS = outputScanner.next();
                
                // Get the associated words
                String testWord = testScanner.next();
                String outputWord = outputScanner.next();
                
                // Count agreement and disagreement
                if (testPOS.equals(outputPOS)) {
                    agreeCount++;
                } else {
                    disagreeCount++;
                }
                
                
             // Count which tag is mistaken for which
                if (!tagChosenForTag.containsKey(testPOS)) {
                    tagChosenForTag.put(testPOS, new HashMap<String, ArrayList<String>>());
                }
                if (!tagChosenForTag.get(testPOS).containsKey(outputPOS)) {
                    tagChosenForTag.get(testPOS).put(outputPOS, new ArrayList<String>());
                }
                tagChosenForTag.get(testPOS).get(outputPOS).add(testWord);
                //tagChosenForTag.get(testPOS).put(outputPOS, tagChosenForTag.get(testPOS).get(outputPOS)+1);
                
                if(!testWord.equals(outputWord)) {
                    System.out.println("line "+i+" ERROR: "+testWord+" does not match "+outputWord);
                }
           } // end of while loop 
            
           
        } catch (Exception e) {
            e.printStackTrace();
        }
	

	}

}
